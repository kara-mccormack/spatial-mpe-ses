{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ###########################################################\
# Title: Bayesian Profile Regression of NATA 2014 for NC\
# Authors: Kara McCormack (kara.mccormack@duke.edu)\
# Date created: 10/19/2019\
# Input files: \
#   /Users/karamccormack/Box/SES-environment/Spatial LCM Paper/DataNC_NATA_wide_total_conc.csv\
#   \
# Output file: \
#   /Users/karamccormack/Box/SES-environment/Spatial LCM Paper/Output/NC_poll_clusters.csv\
###########################################################\
\
# install.packages("PReMiuM")\
setwd("/Users/karamccormack/Box/SES-environment/Spatial LCM Paper/Code")\
# source pollutant names file\
source("/Users/karamccormack/Box/SES-environment/Code/v1/utils/pollutant_names.R")\
\
# load libraries\
library(PReMiuM)\
library(stringr)\
library(readr)\
library(dplyr)\
library(ggplot2)\
library(tidyr)\
\
# set up paths\
data.dir = "/Users/karamccormack/Box/SES-environment/Spatial LCM Paper/Data"\
output.dir = "/Users/karamccormack/Box/SES-environment/Spatial LCM Paper/Output/"\
\
# upload NATA Data\
NC_df <- read_csv(file.path(data.dir, "NC_NATA_wide_total_conc.csv"))[,-1]\
\
# convert to data frame\
NC_df <- as.data.frame(NC_df)\
\
# prepare data for profile regression\
# z transformation\
NC_df_mean_sd = NC_df %>%\
  gather(Pollutant, Level, `1,3-BUTADIENE`:`NICKEL COMPOUNDS`, -Tract) %>%\
  group_by(Pollutant) %>%\
  summarise(mean_level = mean(Level),\
            sd_level = sd(Level))\
\
NC_df_z = NC_df %>%\
  gather(Pollutant, Level, `1,3-BUTADIENE`:`NICKEL COMPOUNDS`, -Tract) %>%\
  group_by(Pollutant) %>%\
  mutate(mean_level = mean(Level),\
         sd_level = sd(Level), \
         z_level = (Level - mean(Level, na.rm = T))/sd(Level, na.rm = T)) %>%\
  select(Tract, Pollutant, z_level) %>%\
  spread(key = Pollutant, value = z_level) %>%\
  as.data.frame\
\
# Prepare data for profile regression\
# log transformation\
NC_df_log_transform = NC_df %>%\
  gather(Pollutant, Level, `1,3-BUTADIENE`:`NICKEL COMPOUNDS`, -Tract) %>%\
  mutate(Level = log(Level)) %>%\
  spread(key = Pollutant, value = Level)\
\
# need no spaces in pollutant names to plug into profile regression\
colnames(NC_df_z) <- str_replace_all(colnames(NC_df_z)," " , "_")\
\
# define covariate names\
covariate_names <- colnames(NC_df_z)[-1]\
\
# check for NA in pollutants\
for (name in covariate_names)\{\
  print(paste("There are", sum(is.na(NC_df_z$name)), "NAs in", name, ".", sep = " "))\
\}\
\
# run bayesian profile regression\
# nBurn = 10000\
# nSweeps = 20000\
runInfoObj_z_burn10k_sweep20k = profRegr(yModel = "Normal",\
                      xModel = "Normal",\
                      nSweeps = 20000,\
                      nBurn = 10000,\
                      data = NC_df_z,\
                      output = "output.dir",\
                      covNames = covariate_names,\
                      nClusInit = 10,\
                      run = TRUE,\
                      excludeY = TRUE, \
                      seed = 1234)\
\
# calculate dissimilarity matrix\
dissimObj_burn10k_sweep20k = calcDissimilarityMatrix(runInfoObj_z_burn10k_sweep20k)\
clusObj_burn10k_sweep20k = calcOptimalClustering(dissimObj_burn10k_sweep20k)\
num_clusters_10k_20k = unique(clusObj_burn10k_sweep20k$clustering)\
num_clusters_10k_20k\
\
# nBurn = 10000\
# nSweeps = 30000\
runInfoObj_z_burn10k_sweep30k = profRegr(yModel = "Normal",\
                                         xModel = "Normal",\
                                         nSweeps = 30000,\
                                         nBurn = 10000,\
                                         data = NC_df_z,\
                                         output = "output.dir.sweeps3k",\
                                         covNames = covariate_names,\
                                         nClusInit = 10,\
                                         run = TRUE,\
                                         excludeY = TRUE, \
                                         seed = 1234)\
\
# calculate dissimilarity matrix\
dissimObj_burn10k_sweep30k = calcDissimilarityMatrix(runInfoObj_z_burn10k_sweep30k)\
clusObj_burn10k_sweep30k = calcOptimalClustering(dissimObj_burn10k_sweep30k)\
num_clusters_10k_30k = unique(clusObj_burn10k_sweep30k$clustering)\
num_clusters_10k_30k\
\
# nBurn = 10000\
# nSweeps = 40000\
runInfoObj_z_burn10k_sweep40k = profRegr(yModel = "Normal",\
                                         xModel = "Normal",\
                                         nSweeps = 40000,\
                                         nBurn = 10000,\
                                         data = NC_df_z,\
                                         output = "output.dir.sweeps4k",\
                                         covNames = covariate_names,\
                                         nClusInit = 10,\
                                         run = TRUE,\
                                         excludeY = TRUE, \
                                         seed = 1234)\
\
# calculate dissimilarity matrix\
dissimObj_burn10k_sweep40k = calcDissimilarityMatrix(runInfoObj_z_burn10k_sweep40k)\
clusObj_burn10k_sweep40k = calcOptimalClustering(dissimObj_burn10k_sweep40k)\
num_clusters_10k_40k = unique(clusObj_burn10k_sweep40k$clustering)\
num_clusters_10k_40k\
\
# nBurn = 10000\
# nSweeps = 50000\
runInfoObj_z_burn10k_sweep50k = profRegr(yModel = "Normal",\
                                         xModel = "Normal",\
                                         nSweeps = 50000,\
                                         nBurn = 10000,\
                                         data = NC_df_z,\
                                         output = "output.dir.sweeps5k",\
                                         covNames = covariate_names,\
                                         nClusInit = 10,\
                                         run = TRUE,\
                                         excludeY = TRUE, \
                                         seed = 1234)\
\
# calculate dissimilarity matrix\
dissimObj_burn10k_sweep50k = calcDissimilarityMatrix(runInfoObj_z_burn10k_sweep50k)\
clusObj_burn10k_sweep50k = calcOptimalClustering(dissimObj_burn10k_sweep50k)\
num_clusters_10k_50k = unique(clusObj_burn10k_sweep50k$clustering)\
num_clusters_10k_50k\
\
\
# add clusters to dataset, rename column to "cluster"\
NC_df = cbind(NC_df, clusObj$clustering)\
names(NC_df)[ncol(NC_df)] = "Cluster"\
unique(NC_df$Cluster)\
\
# output to csv\
write.csv(NC_df, file = file.path(output.dir, "NC_poll_clusters.csv"))\
}